apiVersion: kafka.strimzi.io/v1beta1
kind: KafkaConnect
metadata:
  name: my-connect-cluster
#  annotations:
#  # use-connector-resources configures this KafkaConnect
#  # to use KafkaConnector resources to avoid
#  # needing to call the Connect REST API directly
#    strimzi.io/use-connector-resources: "true"
spec:
  version: 2.4.0
  replicas: 1
  bootstrapServers: my-cluster-kafka-bootstrap:9093
  externalConfiguration:
    volumes:
      - name: cert
        secret:
          secretName: my-cluster-clients-ca-cert
  #    env:
  #      - name: MY_ENVIRONMENT_VARIABLE
  #        valueFrom:
  #          secretKeyRef:
  #            name: my-secret
  #            key: my-key
  config:
    group.id: connect-cluster
    offset.storage.topic: connect-cluster-offsets
    config.storage.topic: connect-cluster-configs
    status.storage.topic: connect-cluster-status
    # Support for TLS-enabling the REST API provided by the Kafka Connect workers
    #    TODO needed?
    #    listeners=${ADMIN_REST_PROTOCOL}://:${ADMIN_REST_PORT}
    rest.advertised.listener: https
    rest.advertised.port: 8083

    listeners.https.ssl.client.auth: none
    #    listeners.https.ssl.endpoint.identification.algorithm:

    #    Match files with volumes
    #    listeners.https.ssl.keystore.location: /etc/ssl/certs/podtls.jks
    #    listeners.https.ssl.keystore.password: ${file:/opt/kafka/external-configuration/connector-config/connector.properties:dbUsername}"
    #    listeners.https.ssl.keystore.type: jks

    listeners.https.ssl.truststore.location: ${file:/opt/kafka/external-configuration/cert/ca.p12}
    #    grabbed from the same file
    listeners.https.ssl.truststore.password: oNfjnNz13wT1
#    listeners.https.ssl.truststore.type: jks
